@model HealthITUnivApp.Course

@{
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}


<div ng-controller="CourseController">
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Course</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-2">University Name</label>
                <div class="col-md-10">
                    <select data-ng-model="university" class="btn btn-default dropdown-toggle"
                            data-ng-options="c.Text as c.Text for c in Universities" data-ng-change="updateCollege()">
                        <option value="">--Select University--</option>
                    </select>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">College Name</label>
                <div class="col-md-10">
                    <select name="CollegeName" data-ng-model="college" class="btn btn-default dropdown-toggle"
                            data-ng-options="c.CollegeName as c.CollegeName for c in Colleges" data-ng-change="updateDepartment()">
                        <option value="">--Select College--</option>
                    </select>                   
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Department Name</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.DepartmentName, Enumerable.Empty<SelectListItem>(), "--Select Department--",
                                htmlAttributes: new { @class = "btn btn-default dropdown-toggle", data_ng_model = "department", data_ng_change = "updateProgram()", data_ng_options = "c.DepartmentName as c.DepartmentName for c in Departments"
                                })
                    @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
                </div>
            </div> 
            <div class="form-group">
                <label class="control-label col-md-2">Program Name</label>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ProgramName, Enumerable.Empty<SelectListItem>(), "--Select Program--",
                                htmlAttributes: new { @class = "btn btn-default dropdown-toggle", data_ng_model = "program", data_ng_options = "c.ProgramName as c.ProgramName for c in Programs" })
                    @Html.ValidationMessageFor(model => model.ProgramName, "", new { @class = "text-danger" })
                </div>
            </div> 
            <div class="form-group">
                @Html.LabelFor(model => model.CourseNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CourseNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CourseNumber, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.CourseType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CourseType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CourseType, "", new { @class = "text-danger" })
                </div>
            </div>         
    
            <div class="form-group">
                @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.URL, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
<script type="text/javascript">

            var app = angular.module('MyApp', []);
            app.controller("CourseController", function ($scope, $http) {


                $http.get("/Courses/getUnivs")
                .success(function (data, status, headers, config) {
                    $scope.Universities = data;
                });

                $scope.updateCollege = function () {

                    $http.get('/Courses/getColleges?univName=' + $scope.university).
                       then(function (data, status, headers, config) {
                           $scope.Colleges = data.data;
                    });
                };
                $scope.updateDepartment = function () {

                    $http.get('/Courses/getDepartments?collegeName=' + $scope.college).
                       then(function (data, status, headers, config) {
                           $scope.Departments = data.data;
                       });
                };
                $scope.updateProgram = function () {

                    $http.get('/Courses/getPrograms?departmentName=' + $scope.department).
                       then(function (data, status, headers, config) {
                           $scope.Programs = data.data;
                       });
                };
            });
</script>
