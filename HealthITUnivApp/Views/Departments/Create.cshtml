@model HealthITUnivApp.Department

@{
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";;
}

<div ng-controller="univController">
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Department</h4>
             @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <label class="control-label col-md-2">University Name</label>
                    <div class="col-md-10">                       
                        <select data-ng-model="university" class = "btn btn-default dropdown-toggle" 
                                data-ng-options="c.Text as c.Text for c in Universities" data-ng-change="updateCollege()">
                            <option value="">--Select University--</option>
                        </select>
                        @*@Html.EditorFor(model => model.UniversityName, new { htmlAttributes = new { @class = "form-control", ng_model = "selectedUniversity" } })*@
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">College Name</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.CollegeName, Enumerable.Empty<SelectListItem>(), "--Select College--",
                                htmlAttributes: new { @class = "btn btn-default dropdown-toggle", data_ng_model = "college", data_ng_options = "c.CollegeName as c.CollegeName for c in Colleges" })
                        @Html.ValidationMessageFor(model => model.CollegeName, "", new { @class = "text-danger" })
                    </div>
                </div>              
                

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartmentName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentAbbreviation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartmentAbbreviation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentAbbreviation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentURL, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartmentURL, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentURL, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentStreet, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartmentStreet, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentStreet, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentCity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartmentCity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentCity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentState, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartmentState, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentState, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentCounty, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartmentCounty, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentCounty, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartmentZipCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentPhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartmentPhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentPhoneNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DepartmentHead, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartmentHead, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DepartmentHead, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
    }
    
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
<script type="text/javascript">
            
            var app = angular.module('MyApp', []);
            app.controller("univController", function ($scope, $http) {
               
               
                $http.get("/Departments/getUnivs")
                .success(function (data, status, headers, config) {
                    $scope.Universities = data;
                                   
                });
                
                $scope.updateCollege = function () {
                   
                    $http.get('/Departments/getColleges?univName=' + $scope.university).
                       then(function (data, status, headers, config) {
                           $scope.Colleges = data.data;
                
                       });


                };

            });
            


</script>